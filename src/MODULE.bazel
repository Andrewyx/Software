module(
    name = "thunderbots",
    version = "head",
    repo_name = "Thunderbots",
)

new_local_repository = use_repo_rule("@bazel//tools/build_defs/repo:local.bzl", "new_local_repository")

bazel_dep(name = "googletest", version = "1.15.2")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "pybind11_bazel", version = "2.13.6")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_foreign_cc", version = "0.14.0")
bazel_dep(name = "rules_python", version = "1.3.0")
bazel_dep(name = "protobuf", version = "31.0")
bazel_dep(name = "abseil-cpp", version = "20250512.0")
bazel_dep(name = "eigen", version = "4.0.0-20241125.bcr.1")
bazel_dep(name = "nanopb", version = "0.4.9.1")
bazel_dep(name = "yaml-cpp", version = "0.8.0")
bazel_dep(name = "buildifier_prebuilt", version = "8.0.3")
bazel_dep(name = "pybind11_protobuf", version = "0.0.0-20250210-f02a2b7")
bazel_dep(name = "rules_proto", version = "7.1.0")

# Setup pybind11
pybind11_configure = use_extension("@pybind11_bazel//:internal_configure.bzl", "internal_configure_extension")
use_repo(pybind11_configure, "pybind11")

# These headers are used by pybind11
#alias(
#    name = "python_headers",
#    actual = "@rules_python//python/cc:current_py_cc_headers",
#)

##############################################
# Register our Toolchains
##############################################
register_toolchains("//py_toolchain:py_toolchain")

register_toolchains(
    "//py_toolchain:k8_jetson_nano_cross_compile_py_cc_toolchain",
    "//py_toolchain:py_cc_toolchain_for_host_x86_64",
)

register_toolchains(
    "//cc_toolchain:cc_toolchain_for_k8_jetson_nano_cross_compile",
    "//cc_toolchain:cc_toolchain_for_k8",
    "//cc_toolchain:cc_toolchain_for_aarch64",
)

new_local_repository(
    name = "py_cc_toolchain_for_host_x86_64",
    build_file = "@//extlibs:py_cc_toolchain.BUILD",
    path = "/usr/include/python3.12/",
)

new_local_repository(
    name = "py_cc_toolchain_for_k8_jetson_nano_cross_compile",
    build_file = "@//extlibs:py_cc_toolchain.BUILD",
    path = "/opt/tbotspython/cross_compile_headers/include/python3.12/",
)

##############################################
# Load PIP packages
##############################################
python = use_extension("@rules_python//python/extensions:python.bzl", "python")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    name = "nanopb_deps",
    python_interpreter = "/opt/tbotspython/bin/python",
    requirements_lock = "//extlibs:nanopb_requirements_lock.txt",
)
use_repo(pip, "nanopb_deps")
pip.parse(
    name = "thunderscope_deps",
    python_interpreter = "/opt/tbotspython/bin/python",
    requirements_lock = "//software/thunderscope:requirements_lock.txt",
)
use_repo(pip, "thunderscope_deps")
pip.parse(
    name = "ansible_deps",
    python_interpreter = "/opt/tbotspython/bin/python",
    requirements_lock = "//software/embedded/ansible:requirements_lock.txt",
)
use_repo(pip, "ansible_deps")
pip.parse(
    name = "simulated_tests_deps",
    python_interpreter = "/opt/tbotspython/bin/python",
    requirements_lock = "//software/simulated_tests:requirements_lock.txt",
)
use_repo(pip, "simulated_tests_deps")
pip.parse(
    name = "robot_diagnostics_cli_deps",
    python_interpreter = "/opt/tbotspython/bin/python",
    requirements_lock = "//software/embedded/robot_diagnostics_cli:requirements_lock.txt",
)
use_repo(pip, "robot_diagnostics_cli_deps")

###########################################################################
# Setup non Bazel Central Registry dependencies & Non MODULE supported deps
###########################################################################
all_contents = """filegroup(name = "all", srcs = glob(["**/**"]), visibility = ["//visibility:public"])"""

http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "cpp_redis",
    sha256 = "12a6fc86ba4ca3d4537a3eee82c094f385b8e03e283c664c976f16d421f17f7d",
    strip_prefix = "cpp_redis-fc2c43fa07e45e1ef0f77cbda6a240e7890ae5aa",
    urls = [
        "https://github.com/cpp-redis/cpp_redis/archive/fc2c43fa07e45e1ef0f77cbda6a240e7890ae5aa.zip",
    ],
)

http_archive(
    name = "g3log",
    build_file = "@//extlibs:g3log.BUILD",
    sha256 = "2177e6dfd86fa7465c44c8ef5c3b6ab98ffc94e1130355d6982f7d886cb7bec9",
    strip_prefix = "g3log-2.4",
    url = "https://github.com/KjellKod/g3log/archive/refs/tags/2.4.zip",
)

http_archive(
    name = "base64",
    build_file = "@//extlibs:base64.BUILD",
    sha256 = "5e5366919938b834ca95fec4c2a80ad0c002872175d43226c933d25e40572883",
    strip_prefix = "cpp-base64-2.rc.08",
    url = "https://github.com/ReneNyffenegger/cpp-base64/archive/refs/tags/V2.rc.08.zip",
)

bazel_dep(name = "rules_boost", repo_name = "com_github_nelhage_rules_boost")
archive_override(
    module_name = "rules_boost",
    strip_prefix = "rules_boost-master",
    url = "https://github.com/nelhage/rules_boost/archive/refs/heads/master.tar.gz",
    # It is recommended to edit the above URL and the below sha256 to point to a specific version of this repository.
    # integrity = "sha256-...",
)

non_module_boost_repositories = use_extension("@com_github_nelhage_rules_boost//:boost/repositories.bzl", "non_module_dependencies")
use_repo(
    non_module_boost_repositories,
    "boost",
)

##############################################
# Repo-based dependencies
##############################################
# tool used to flash firmware with bazel
bazel_dep(name = "platformio_rules", repo_name = "platformio_rules")
git_override(
    module_name = "platformio_rules",
    commit = "6f1b0fa48a90c2e113e293ed2953bb0963a14824",
    remote = "https://github.com/Andrewyx/platformio_rules.git",
)

bazel_dep(name = "hedron_compile_commands", version = "1.0.5", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    commit = "4f28899228fb3ad0126897876f147ca15026151e",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
)

##############################################
#Add new git repos
##############################################
new_git_repository = use_repo_rule("@bazel_tools//tools/build_defs/repo:git.bzl", "new_git_repository")

new_git_repository(
    name = "LTC4151",
    build_file = "@//extlibs:LTC4151.BUILD",
    commit = "729952f10bcdcf359877b6f728565c17a8f17423",
    remote = "https://github.com/kerrydwong/LTC4151.git",
    shallow_since = "1397951678 -0400",
)

new_git_repository(
    name = "munkres_cpp",
    build_file = "@//extlibs:munkres_cpp.BUILD",
    commit = "61086fcf5b3a8ad4bda578cdc2d1dca57b548786",
    remote = "https://github.com/saebyn/munkres-cpp.git",
    shallow_since = "1479502661 -0800",
)

# State Machine Library
new_git_repository(
    name = "sml",
    build_file = "@//extlibs:sml.BUILD",
    commit = "07a503cc3f18de2b861ea15d8357d3b3c0c978d6",  # Version `1.1.3`
    remote = "https://github.com/boost-ext/sml.git",
    shallow_since = "1596403987 -0600",
)

new_git_repository(
    name = "trinamic",
    build_file = "@//extlibs:trinamic.BUILD",
    commit = "0cd695fab6d43ceb121af4b8608e5d92b14e1ce9",
    remote = "https://github.com/trinamic/TMC-API.git",
    shallow_since = "1631132123 +0200",
)

new_git_repository(
    name = "tracy",
    build_file = "@//extlibs:tracy.BUILD",
    commit = "37aff70dfa50cf6307b3fee6074d627dc2929143",
    remote = "https://github.com/wolfpld/tracy.git",
    shallow_since = "1697482622 +0200",
)

##############################################
# New local repos for our toolchains/compilers
##############################################
new_local_repository(
    name = "linux_k8_gcc",
    build_file = "@//extlibs:linux_k8_gcc.BUILD",
    path = "/",
)

new_local_repository(
    name = "linux_aarch64_gcc",
    build_file = "@//extlibs:linux_aarch64_gcc.BUILD",
    path = "/",
)

# libclang-dev is installed into the system through setup_software.sh
new_local_repository(
    name = "libclang",
    build_file = "@//extlibs:libclang.BUILD",
    path = "/usr/lib/llvm-6.0/",
)

new_local_repository(
    name = "k8_jetson_nano_cross_compile_gcc",
    build_file = "@//extlibs:k8_jetson_nano_cross_compile_gcc.BUILD",
    path = "/opt/tbotspython/aarch64-tbots-linux-gnu/",
)

##############################################
# Workarounds and Fixes
##############################################
# required to use `py_proto_library` from protobuf
http_archive(
    name = "six_archive",
    build_file = "//extlibs:six.BUILD",
    sha256 = "105f8d68616f8248e24bf0e9372ef04d3cc10104f1980f54d57b2ce73a5ad56a",
    url = "https://pypi.python.org/packages/source/s/six/six-1.10.0.tar.gz#md5=34eed507548117b2ab523ab14b2f8b55",
)

#alias(
#    name = "six",
#    actual = "@six_archive//:six",
#)

#maybe = use_repo_rule("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")
#
#maybe(
#    git_repository,
#    name = "rules_third_party",
#    commit = "8d0ba00f9874588c1ea38d1be2859060ac8c8516",
#    remote = "https://github.com/DraconicEnt/rules_third_party.git",
#    shallow_since = "1620228587 -0400",
#)
#
#bullet = use_repo_rule("@rules_third_party//libraries:bullet.bzl", "bullet")
