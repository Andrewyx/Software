tasks:
  - name: check internet connection
    tags: check_internet
    uri:
      url: "https://google.com"
      timeout: 30
      status_code: 200

  - name: enable passwordless sudo for rsync
    tags: enable_passwordless_sudo
    become: true
    become_method: sudo
    lineinfile:
      path: /etc/sudoers
      state: present
      insertafter: EOF
      line: '{{ ansible_user }} ALL=NOPASSWD:/usr/bin/rsync'

  - name: Sync Setup Script
    become: true
    become_method: sudo
    tags:
      - setup_robot_software_deps
    ansible.posix.synchronize:
      src: ../../setup_robot_software_deps.sh
      dest: ~/
      recursive: yes
      copy_links: yes

  # Output is streamed to target host's (Jetson/Pi's /tmp/setup.log)
  - name: Running the setup script, this will take a while
    become_method: sudo
    become: true
    command: '/home/{{ ansible_user }}/setup_robot_software_deps.sh >& /tmp/setup.log'
    register: result
    tags:
      - setup_robot_software_deps
    args:
      chdir: ~/

  - name: success msg
    tags:
      - setup_robot_software_deps
    debug:
      msg:
        - "[Robot ID = {{ inventory_hostname }}]"
        - "Setup Script run successfully"

  - name: Add user robot to dialout
    become: true
    become_method: sudo
    tags:
      - add_user_robot_to_dialout
    command: 'adduser robot dialout'

  - name: Run systemd setup
    tags: systemd
    block:
      - name: Delete everything on ~/
        file:
          state: absent
          path: /home/robot/thunderbots_binaries
        become_method: sudo
        become: true
        register: result

      - name: Sync Binaries
        with_items:
          - ../../thunderloop_main
        loop_control:
          loop_var: binary_path
        ansible.posix.synchronize:
          src: "{{ binary_path }}"
          dest: ~/thunderbots_binaries/
          recursive: yes
          copy_links: yes
        tags:
          - syncBinaries

      - name: Sync all systemd files
        become_method: sudo
        become: true
        tags:
          - syncSystemdFiles
        register: res
        ansible.posix.synchronize:
          src: ../../linux_configs/systemd/
          dest: /etc/systemd/system
          copy_links: yes
          loop_var: service_name

        # NOTE: "Enabling systems" means they will start on boot
      - name: Enable system services
        become: true
        become_method: sudo
        with_items:
          - thunderbots
          - thunderloop
        loop_control:
          loop_var: service_name
        ansible.builtin.systemd:
          name: "{{ service_name }}"
          enabled: yes
          masked: no
          daemon_reload: yes
        tags:
          - enableSystemd

      - name: Enable WiFi waiter service
        become: true
        become_method: sudo
        service: name=NetworkManager-wait-online enabled=yes

  - name: Reboot
    become: true
    become_user: root
    become_method: sudo
    register: res
    tags:
      - reboot
      - device_tree
    reboot:
      msg: "Reboot initiated by Ansible"
      connect_timeout: 20
      reboot_timeout: 1200
      pre_reboot_delay: 0
      post_reboot_delay: 10
      test_command: whoami

  - name: Success msg
    tags:
      - setup_success
    debug:
      msg:
        - "[Robot ID = {{ inventory_hostname }}]"
        - "Systemd Setup run successfully"
